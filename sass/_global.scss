// using px (fixed) : bcz we don't want neccessarly the button to scale up if the browser's base font size changed

// line-height :  design 26 => 26 / 1rem = 1.625

/* 50rem =  800px */
/*
 min(100% , 50rem) => if the viewport of the parent element is less than 50rem,then  use it's intire viewport (100%)
 if larger then, use  50rem 

  

*/

/*
* grid-template-columns: 1fr min(100% - 20px, 50rem) 1fr;
=> using 1fr in the right and left so they take the space left
and center our grid-main

 Design : left-right space
        mobile :  is 48px
        tablet :  is 40px

        
**** grid-template-columns: 1fr min(100% - 48px, 50rem) 1fr;
if the screen size is for example 1000px 
min(1000px - 48px , 800px ) = 800px
so left colum and right column will be   100 each (200 both)

*/
body {
  font-weight: 400;
  line-height: 1.6;
  // overflow-x: hidden;
  font-style: normal;
  font-family: var(--ff);
  min-height: 100vh;
  padding-block: 24px;
  @include media(tablet) {
    padding-block: 40px;
  }
  @include media(desktop) {
    padding-block: 55px;
  }
}

h1,
h2,
h3 {
  font-weight: var(--fw-black);
  text-transform: uppercase;
}

.button {
  font-weight: var(--fw-bold);
  font-size: 1rem;
  padding: 16px 26px;
  line-height: 1.625;
  text-transform: uppercase;
  border-radius: 8px;
  border: 0;
  transition-duration: 150ms;
  transition-property: background-color, color;
  &:hover {
    cursor: pointer;
  }
  &.orange {
    background-color: var(--orange);
    color: var(--white);
    &:hover {
      background-color: var(--orange-lt);
    }
  }
  &.blue {
    background-color: var(--gray-lt);
    color: var(--blue);
    &:hover {
      background-color: var(--blue);
      color: var(--gray-lt);
    }
  }
}

p {
  color: var(--blue-lt);
}

.grid-main {
  display: grid;
  --gap: 20px;
  /// 2 => 2 gaps between 1-2 columns and  4-5 columns
  grid-template-columns:
    4px // space on left 4px + 20px gap
    repeat(3, calc((100% - 48px - var(--gap) * 2) / 3))
    4px; // space on right 4px + 20px gap
  gap: var(--gap);
}

.grid-content {
  grid-column: 2 / span 1;
}

.gray-block {
  background-color: var(--gray-lt);
  height: 240px;
  border-radius: 20px 0 0 20px;
  display: none; // in mobile and tablet
}

.hero-image {
  grid-column: 2 / -2;
}

.hero-text {
  grid-column: 2/-2;
}
