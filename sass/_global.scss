// using px (fixed) : bcz we don't want neccessarly the button to scale up if the browser's base font size changed

// line-height :  design 26 => 26 / 1rem = 1.625

/* 50rem =  800px */
/*
 min(100% , 50rem) => if the viewport of the parent element is less than 50rem,then  use it's intire viewport (100%)
 if larger then, use  50rem 

  

*/

/*
* grid-template-columns: 1fr min(100% - 20px, 50rem) 1fr;
=> using 1fr in the right and left so they take the space left
and center our grid-main

 Design : left-right space
        mobile :  is 48px
        tablet :  is 40px

        
**** grid-template-columns: 1fr min(100% - 48px, 50rem) 1fr;
if the screen size is for example 1000px 
min(1000px - 48px , 800px ) = 800px
so left colum and right column will be   100 each (200 both)

*/
body {
  font-weight: 400;
  font-style: normal;
  font-family: var(--ff);

  line-height: 1.6;

  perspective: 1000px;

  padding-block: 24px;

  overflow-x: hidden;

  @include media(tablet) {
    padding-block: 40px;
  }

  @include media(desktop) {
    padding-block: 55px;
  }
}

h1,
h2,
h3 {
  font-weight: var(--fw-black);
  text-transform: uppercase;
  color: var(--blue);
}

p {
  font-size: 1rem;
  font-size: clamp(
    1rem,
    0.9431818181818182rem + 0.24242424242424243vw,
    1.125rem
  );
  line-height: 1.625;
  color: var(--blue-lt);

  &.small {
    font-size: 1rem;
  }
}

strong.caps {
  text-transform: uppercase;
}
h1 {
  font-size: 3rem;
  font-size: clamp(3rem, 2.111111111111111rem + 1.8518518518518516vw, 3.5rem);
  line-height: 1;
}

h2 {
  font-size: 2rem;
  line-height: 1.2;
}

picture {
  overflow: hidden;
  border-radius: var(--br-5);

  img {
    width: 100%;
    height: 100%;
  }

  &.flush-left {
    border-radius: 0 var(--br-5) var(--br-5) 0;
  }

  &.flush-right {
    border-radius: var(--br-5) 0 0 var(--br-5);
  }
}

.grid-main {
  display: grid;
  --gap: 20px;
  grid-template-columns:
    4px
    repeat(3, calc((100% - 48px - var(--gap) * 2) / 3))
    4px;

  column-gap: var(--gap);
  align-items: center;

  @include media(tablet) {
    /// 2 => 2 gaps between 1-2 columns and  4-5 columns
    --gap: 30px;

    grid-template-columns:
      10px // space on left 10px + 30px gap
      repeat(6, calc((100% - 80px - var(--gap) * 5) / 6))
      10px; // space on right 10px + 30px gap
  }

  @include media(desktop) {
    // 1fr  max(1200px) 1fr => centered on the screen
    /// 2 => 2 gaps between 1-2 columns and  4-5 columns
    --gap: 30px;
    grid-template-columns:
      1fr // take the remaining space
      repeat(12, calc((75rem - var(--gap) * 11) / 12))
      1fr; // take the remaining space
  }
}
